# coding: utf-8

"""
    Irisnet API

    Artificial Intelligence (AI) for image- and video-processing in realtime. This is an interactive documentation meant to give a place were you can quickly look up the endpoints and their schemas, while also giving you the option to try things out yourself.  Listed below you'll see the available endpoints of the API that can be expanded by clicking on it. Each expanded endpoint lists the request parameter (if available) and the request body (if available). The request body can list some example bodies and the schema, explaining each model in detail. Additionally you'll find a 'Try it out' button where you can type in your custom parameters and custom body and execute that against the API. The responses section in the expanded endpoint lists the possible responses with their corresponding status codes. If you've executed an API call it will also show you the response from the server.  Underneath the endpoints you'll find the model schemas. These are the models used for the requests and responses.By clicking on the right arrow you can expand the model and it will show you a description of the model and the model parameters. For nested models you can keep clicking the right arrow to reveal further details on it.    # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import irisnet_client
from irisnet_client.models.in_params import INParams  # noqa: E501
from irisnet_client.rest import ApiException

class TestINParams(unittest.TestCase):
    """INParams unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test INParams
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = irisnet_client.models.in_params.INParams()  # noqa: E501
        if include_optional :
            return INParams(
                in_default = irisnet_client.models.in_default.INDefault(
                    thresh = 0.0, 
                    grey = 0, ), 
                in_param = [
                    irisnet_client.models.in_param.INParam(
                        in_class = 'face', 
                        min = 56, 
                        max = 56, 
                        draw_mode = 0, 
                        grey = 0, )
                    ]
            )
        else :
            return INParams(
        )

    def testINParams(self):
        """Test INParams"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
